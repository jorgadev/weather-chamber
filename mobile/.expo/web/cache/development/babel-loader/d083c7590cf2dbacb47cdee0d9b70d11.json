{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Radovan\\\\Desktop\\\\weather-chamber\\\\mobile\\\\App.js\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { SearchBar, Button, Image } from \"react-native-elements\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { useEffect } from \"react\";\nimport MapView, { Marker } from \"react-native-maps\";\nvar ip = \"http://192.168.64.102:3000/\";\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"None\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"ERR\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      country = _useState4[0],\n      setCountry = _useState4[1];\n\n  var _useState5 = useState(\"0\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      temp = _useState6[0],\n      setTemp = _useState6[1];\n\n  var _useState7 = useState(\"0\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      humidity = _useState8[0],\n      setHumidity = _useState8[1];\n\n  var _useState9 = useState(\"0\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pressure = _useState10[0],\n      setPressure = _useState10[1];\n\n  var _useState11 = useState(\"0\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      wind = _useState12[0],\n      setWind = _useState12[1];\n\n  var _useState13 = useState(\"none\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      description = _useState14[0],\n      setDescription = _useState14[1];\n\n  var _useState15 = useState(\"01n\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      icon = _useState16[0],\n      setIcon = _useState16[1];\n\n  useEffect(function () {\n    var unsubscribe = navigation.addListener(\"focus\", function () {\n      fetch(ip).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        setName(json.name);\n        setCountry(json.country);\n        setTemp(json.temp);\n        setPressure(json.pressure);\n        setWind(json.wind);\n        setHumidity(json.humidity);\n        setDescription(json.description.split(\" \").map(function (x) {\n          return x[0].toUpperCase() + x.slice(1);\n        }).join(\" \"));\n        setIcon(json.icon);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    });\n    return unsubscribe;\n  }, [navigation]);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      marginTop: 30,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"#fff\",\n      flex: 2,\n      paddingVertical: 30,\n      paddingHorizontal: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 32,\n      fontFamily: \"sans-serif-light\",\n      textAlign: \"center\",\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, name, \", \", country), React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: \"http://openweathermap.org/img/wn/\" + icon + \"@2x.png\"\n    },\n    style: {\n      width: 100,\n      height: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: \"#555\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, description)), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 64\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, temp, \"\\xB0\")))), React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"#fff\",\n      marginTop: 10,\n      flexDirection: \"row\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#999\",\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Wind\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, wind, \" km/h\")), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      borderLeftWidth: 5,\n      borderLeftColor: \"#eee\",\n      borderRightWidth: 5,\n      borderRightColor: \"#eee\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#999\",\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Humidity\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, humidity, \" %\")), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#999\",\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"Pressure\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, pressure, \" bar\"))), React.createElement(View, {\n    style: {\n      flex: 2,\n      backgroundColor: \"royalblue\",\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction MapScreen(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      search = _useState18[0],\n      changeSearch = _useState18[1];\n\n  var _useState19 = useState(46.54489),\n      _useState20 = _slicedToArray(_useState19, 2),\n      lat = _useState20[0],\n      changeLat = _useState20[1];\n\n  var _useState21 = useState(14.95645),\n      _useState22 = _slicedToArray(_useState21, 2),\n      lon = _useState22[0],\n      changeLon = _useState22[1];\n\n  var cityName;\n  useEffect(function () {\n    var unsubscribe = navigation.addListener(\"focus\", function () {\n      fetch(ip).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        changeLat(json.coord.lat);\n        changeLon(json.coord.lon);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    });\n    return unsubscribe;\n  }, [navigation]);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      marginTop: 30,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, React.createElement(SearchBar, {\n    placeholder: \"City..\",\n    platform: \"android\",\n    onChangeText: changeSearch,\n    value: search,\n    containerStyle: {\n      paddingBottom: 0,\n      paddingTop: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Apply\",\n    onPress: function onPress() {\n      if (search != \"\") {\n        cityName = search;\n        fetch(ip + \"city/\" + cityName).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          Alert.alert(\"Change city\", 'You changed city to \"' + cityName + '\" ?', [{\n            text: \"OK\",\n            onPress: function onPress() {\n              if (json.cod == 200) {\n                changeLat(json.coord.lat);\n                changeLon(json.coord.lon);\n                navigation.navigate(\"Home\");\n              } else {\n                Alert.alert(\"Invalid name\", \"You inserted invalid name\", [{\n                  text: \"OK\"\n                }], {\n                  cancelable: false\n                });\n              }\n            }\n          }], {\n            cancelable: false\n          });\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }), React.createElement(MapView, {\n    style: {\n      position: \"relative\",\n      flex: 1,\n      marginTop: 10\n    },\n    initialRegion: {\n      latitude: lat,\n      longitude: lon,\n      latitudeDelta: 20,\n      longitudeDelta: 20\n    },\n    onPress: function onPress(e) {\n      changeLat(e.nativeEvent.coordinate.latitude);\n      changeLon(e.nativeEvent.coordinate.longitude);\n      fetch(ip + \"coord/lat=\" + e.nativeEvent.coordinate.latitude + \"&lon=\" + e.nativeEvent.coordinate.longitude).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        Alert.alert(\"Change city\", 'You changed city to \"' + json.name + '\" ?', [{\n          text: \"OK\",\n          onPress: function onPress() {\n            if (json.cod == 200) {\n              navigation.navigate(\"Home\");\n            }\n          }\n        }], {\n          cancelable: false\n        });\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, React.createElement(Marker, {\n    coordinate: {\n      latitude: lat,\n      longitude: lon\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction CameraScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 5\n    }\n  });\n}\n\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _this = this;\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref3) {\n      var route = _ref3.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused,\n              color = _ref4.color,\n              size = _ref4.size;\n          var iconName;\n\n          if (route.name === \"Home\") {\n            iconName = focused ? \"ios-home\" : \"ios-home-outline\";\n          } else if (route.name === \"Map\") {\n            iconName = focused ? \"ios-locate\" : \"ios-locate-outline\";\n          } else if (route.name === \"Camera\") {\n            iconName = focused ? \"ios-camera\" : \"ios-camera-outline\";\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 20\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: \"royalblue\",\n      inactiveTintColor: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    style: styles.navLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Map\",\n    component: MapScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Camera\",\n    component: CameraScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingHorizontal: 10\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  },\n  countContainer: {\n    alignItems: \"center\",\n    padding: 10\n  },\n  countText: {\n    color: \"#FF00FF\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Radovan/Desktop/weather-chamber/mobile/App.js"],"names":["React","useState","SearchBar","Button","Image","NavigationContainer","createBottomTabNavigator","Ionicons","useEffect","MapView","Marker","ip","HomeScreen","navigation","name","setName","country","setCountry","temp","setTemp","humidity","setHumidity","pressure","setPressure","wind","setWind","description","setDescription","icon","setIcon","unsubscribe","addListener","fetch","then","response","json","split","map","x","toUpperCase","slice","join","catch","error","console","flex","marginTop","padding","backgroundColor","paddingVertical","paddingHorizontal","fontSize","fontFamily","textAlign","marginBottom","flexDirection","justifyContent","alignItems","uri","width","height","color","borderLeftWidth","borderLeftColor","borderRightWidth","borderRightColor","MapScreen","search","changeSearch","lat","changeLat","lon","changeLon","cityName","coord","paddingBottom","paddingTop","Alert","alert","text","onPress","cod","navigate","cancelable","position","latitude","longitude","latitudeDelta","longitudeDelta","e","nativeEvent","coordinate","CameraScreen","Tab","App","route","tabBarIcon","focused","size","iconName","activeTintColor","inactiveTintColor","styles","navLink","StyleSheet","create","container","button","countContainer","countText"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Text, View, StyleSheet, Alert } from \"react-native\";\r\nimport { SearchBar, Button, Image } from \"react-native-elements\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\nimport { useEffect } from \"react\";\r\nimport MapView, { Marker } from \"react-native-maps\";\r\n\r\n// server ip address\r\nconst ip = \"http://192.168.64.102:3000/\";\r\n//const ip = \"http://10.240.47.35:3000/\";\r\n\r\n// home screen\r\nfunction HomeScreen({ navigation }) {\r\n  // define hooks\r\n  const [name, setName] = useState(\"None\");\r\n  const [country, setCountry] = useState(\"ERR\");\r\n  const [temp, setTemp] = useState(\"0\");\r\n  const [humidity, setHumidity] = useState(\"0\");\r\n  const [pressure, setPressure] = useState(\"0\");\r\n  const [wind, setWind] = useState(\"0\");\r\n  const [description, setDescription] = useState(\"none\");\r\n  const [icon, setIcon] = useState(\"01n\");\r\n  useEffect(() => {\r\n    // on home screen focus fetch data from api\r\n    const unsubscribe = navigation.addListener(\"focus\", () => {\r\n      fetch(ip)\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          // set variables to response data\r\n          setName(json.name);\r\n          setCountry(json.country);\r\n          setTemp(json.temp);\r\n          setPressure(json.pressure);\r\n          setWind(json.wind);\r\n          setHumidity(json.humidity);\r\n          setDescription(\r\n            json.description\r\n              .split(\" \")\r\n              .map((x) => x[0].toUpperCase() + x.slice(1))\r\n              .join(\" \")\r\n          );\r\n          setIcon(json.icon);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    });\r\n    return unsubscribe;\r\n  }, [navigation]);\r\n  return (\r\n    <View\r\n      style={{\r\n        flex: 1,\r\n        marginTop: 30,\r\n        padding: 10,\r\n      }}\r\n    >\r\n      <View\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          flex: 2,\r\n          paddingVertical: 30,\r\n          paddingHorizontal: 5,\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            fontSize: 32,\r\n            fontFamily: \"sans-serif-light\",\r\n            textAlign: \"center\",\r\n            marginBottom: 20,\r\n          }}\r\n        >\r\n          {name}, {country}\r\n        </Text>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Image\r\n              source={{\r\n                uri: \"http://openweathermap.org/img/wn/\" + icon + \"@2x.png\",\r\n              }}\r\n              style={{ width: 100, height: 100 }}\r\n            />\r\n            <Text style={{ fontSize: 16, color: \"#555\" }}>{description}</Text>\r\n          </View>\r\n          <View\r\n            style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\r\n          >\r\n            <Text style={{ fontSize: 64 }}>{temp}°</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: \"#fff\",\r\n          marginTop: 10,\r\n          flexDirection: \"row\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text style={{ color: \"#999\", marginBottom: 10 }}>Wind</Text>\r\n          <Text>{wind} km/h</Text>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            borderLeftWidth: 5,\r\n            borderLeftColor: \"#eee\",\r\n            borderRightWidth: 5,\r\n            borderRightColor: \"#eee\",\r\n          }}\r\n        >\r\n          <Text style={{ color: \"#999\", marginBottom: 10 }}>Humidity</Text>\r\n          <Text>{humidity} %</Text>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text style={{ color: \"#999\", marginBottom: 10 }}>Pressure</Text>\r\n          <Text>{pressure} bar</Text>\r\n        </View>\r\n      </View>\r\n      <View\r\n        style={{ flex: 2, backgroundColor: \"royalblue\", marginTop: 10 }}\r\n      ></View>\r\n    </View>\r\n  );\r\n}\r\n\r\n// map screen\r\nfunction MapScreen({ navigation }) {\r\n  // declare map variables\r\n  const [search, changeSearch] = useState(\"\");\r\n  const [lat, changeLat] = useState(46.54489);\r\n  const [lon, changeLon] = useState(14.95645);\r\n  let cityName;\r\n\r\n  useEffect(() => {\r\n    // on home screen focus fetch data from api\r\n    const unsubscribe = navigation.addListener(\"focus\", () => {\r\n      fetch(ip)\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          // set variables to response data\r\n          changeLat(json.coord.lat);\r\n          changeLon(json.coord.lon);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    });\r\n    return unsubscribe;\r\n  }, [navigation]);\r\n\r\n  return (\r\n    <View style={{ flex: 1, marginTop: 30, padding: 10 }}>\r\n      <SearchBar\r\n        placeholder=\"City..\"\r\n        platform=\"android\"\r\n        onChangeText={changeSearch}\r\n        value={search}\r\n        containerStyle={{ paddingBottom: 0, paddingTop: 0 }}\r\n      />\r\n      <Button\r\n        title=\"Apply\"\r\n        onPress={() => {\r\n          if (search != \"\") {\r\n            cityName = search;\r\n            fetch(ip + \"city/\" + cityName)\r\n              .then((response) => response.json())\r\n              .then((json) => {\r\n                Alert.alert(\r\n                  \"Change city\",\r\n                  'You changed city to \"' + cityName + '\" ?',\r\n                  [\r\n                    {\r\n                      text: \"OK\",\r\n                      onPress: () => {\r\n                        if (json.cod == 200) {\r\n                          changeLat(json.coord.lat);\r\n                          changeLon(json.coord.lon);\r\n                          navigation.navigate(\"Home\");\r\n                        } else {\r\n                          Alert.alert(\r\n                            \"Invalid name\",\r\n                            \"You inserted invalid name\",\r\n                            [\r\n                              {\r\n                                text: \"OK\",\r\n                              },\r\n                            ],\r\n                            { cancelable: false }\r\n                          );\r\n                        }\r\n                      },\r\n                    },\r\n                  ],\r\n                  { cancelable: false }\r\n                );\r\n              });\r\n          }\r\n        }}\r\n      />\r\n      <MapView\r\n        style={{ position: \"relative\", flex: 1, marginTop: 10 }}\r\n        initialRegion={{\r\n          latitude: lat,\r\n          longitude: lon,\r\n          latitudeDelta: 20,\r\n          longitudeDelta: 20,\r\n        }}\r\n        onPress={(e) => {\r\n          changeLat(e.nativeEvent.coordinate.latitude);\r\n          changeLon(e.nativeEvent.coordinate.longitude);\r\n          fetch(\r\n            ip +\r\n              \"coord/lat=\" +\r\n              e.nativeEvent.coordinate.latitude +\r\n              \"&lon=\" +\r\n              e.nativeEvent.coordinate.longitude\r\n          )\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n              Alert.alert(\r\n                \"Change city\",\r\n                'You changed city to \"' + json.name + '\" ?',\r\n                [\r\n                  {\r\n                    text: \"OK\",\r\n                    onPress: () => {\r\n                      if (json.cod == 200) {\r\n                        navigation.navigate(\"Home\");\r\n                      }\r\n                    },\r\n                  },\r\n                ],\r\n                { cancelable: false }\r\n              );\r\n            });\r\n        }}\r\n      >\r\n        <Marker coordinate={{ latitude: lat, longitude: lon }} />\r\n      </MapView>\r\n    </View>\r\n  );\r\n}\r\n\r\n// camera screen\r\nfunction CameraScreen() {\r\n  return (\r\n    <View\r\n      style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\r\n    ></View>\r\n  );\r\n}\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n\r\n            if (route.name === \"Home\") {\r\n              iconName = focused ? \"ios-home\" : \"ios-home-outline\";\r\n            } else if (route.name === \"Map\") {\r\n              iconName = focused ? \"ios-locate\" : \"ios-locate-outline\";\r\n            } else if (route.name === \"Camera\") {\r\n              iconName = focused ? \"ios-camera\" : \"ios-camera-outline\";\r\n            }\r\n\r\n            // You can return any component that you like here!\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n        })}\r\n        tabBarOptions={{\r\n          activeTintColor: \"royalblue\",\r\n          inactiveTintColor: \"gray\",\r\n        }}\r\n      >\r\n        <Tab.Screen name=\"Home\" component={HomeScreen} style={styles.navLink} />\r\n        <Tab.Screen name=\"Map\" component={MapScreen} />\r\n        <Tab.Screen name=\"Camera\" component={CameraScreen} />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    paddingHorizontal: 10,\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#DDDDDD\",\r\n    padding: 10,\r\n  },\r\n  countContainer: {\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n  },\r\n  countText: {\r\n    color: \"#FF00FF\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}