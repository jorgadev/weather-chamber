{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Radovan\\\\Desktop\\\\weather-chamber\\\\mobile\\\\App.js\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { SearchBar, Button, Image } from \"react-native-elements\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { useEffect } from \"react\";\nimport MapView, { Marker } from \"react-native-maps\";\nvar ip = \"http://192.168.64.102:3000/\";\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return null;\n}\n\nfunction MapScreen(_ref2) {\n  var navigation = _ref2.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      changeSearch = _useState2[1];\n\n  var _useState3 = useState(46.54489),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lat = _useState4[0],\n      changeLat = _useState4[1];\n\n  var _useState5 = useState(14.95645),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lon = _useState6[0],\n      changeLon = _useState6[1];\n\n  var cityName;\n  useEffect(function () {\n    var unsubscribe = navigation.addListener(\"focus\", function () {\n      fetch(ip).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        changeLat(json.coord.lat);\n        changeLon(json.coord.lon);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    });\n    return unsubscribe;\n  }, [navigation]);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      marginTop: 30,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, React.createElement(SearchBar, {\n    placeholder: \"City..\",\n    platform: \"android\",\n    onChangeText: changeSearch,\n    value: search,\n    containerStyle: {\n      paddingBottom: 0,\n      paddingTop: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Apply\",\n    onPress: function onPress() {\n      if (search != \"\") {\n        cityName = search;\n        fetch(ip + \"city/\" + cityName).then(function (response) {\n          return response.json();\n        }).then(function (json) {\n          Alert.alert(\"Change city\", 'You changed city to \"' + cityName + '\" ?', [{\n            text: \"OK\",\n            onPress: function onPress() {\n              if (json.cod == 200) {\n                changeLat(json.coord.lat);\n                changeLon(json.coord.lon);\n                navigation.navigate(\"Home\");\n              } else {\n                Alert.alert(\"Invalid name\", \"You inserted invalid name\", [{\n                  text: \"OK\"\n                }], {\n                  cancelable: false\n                });\n              }\n            }\n          }], {\n            cancelable: false\n          });\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }), React.createElement(MapView, {\n    style: {\n      position: \"relative\",\n      flex: 1,\n      marginTop: 10\n    },\n    initialRegion: {\n      latitude: lat,\n      longitude: lon,\n      latitudeDelta: 20,\n      longitudeDelta: 20\n    },\n    onPress: function onPress(e) {\n      changeLat(e.nativeEvent.coordinate.latitude);\n      changeLon(e.nativeEvent.coordinate.longitude);\n      fetch(ip + \"coord/lat=\" + e.nativeEvent.coordinate.latitude + \"&lon=\" + e.nativeEvent.coordinate.longitude).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        Alert.alert(\"Change city\", 'You changed city to \"' + json.name + '\" ?', [{\n          text: \"OK\",\n          onPress: function onPress() {\n            if (json.cod == 200) {\n              navigation.navigate(\"Home\");\n            }\n          }\n        }], {\n          cancelable: false\n        });\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }\n  }, React.createElement(Marker, {\n    coordinate: {\n      latitude: lat,\n      longitude: lon\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction CameraScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 5\n    }\n  });\n}\n\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _this = this;\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref3) {\n      var route = _ref3.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused,\n              color = _ref4.color,\n              size = _ref4.size;\n          var iconName;\n\n          if (route.name === \"Home\") {\n            iconName = focused ? \"ios-home\" : \"ios-home-outline\";\n          } else if (route.name === \"Map\") {\n            iconName = focused ? \"ios-locate\" : \"ios-locate-outline\";\n          } else if (route.name === \"Camera\") {\n            iconName = focused ? \"ios-camera\" : \"ios-camera-outline\";\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 20\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: \"royalblue\",\n      inactiveTintColor: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    style: styles.navLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Map\",\n    component: MapScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Camera\",\n    component: CameraScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingHorizontal: 10\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"#DDDDDD\",\n    padding: 10\n  },\n  countContainer: {\n    alignItems: \"center\",\n    padding: 10\n  },\n  countText: {\n    color: \"#FF00FF\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Radovan/Desktop/weather-chamber/mobile/App.js"],"names":["React","useState","SearchBar","Button","Image","NavigationContainer","createBottomTabNavigator","Ionicons","useEffect","MapView","Marker","ip","HomeScreen","navigation","MapScreen","search","changeSearch","lat","changeLat","lon","changeLon","cityName","unsubscribe","addListener","fetch","then","response","json","coord","catch","error","console","flex","marginTop","padding","paddingBottom","paddingTop","Alert","alert","text","onPress","cod","navigate","cancelable","position","latitude","longitude","latitudeDelta","longitudeDelta","e","nativeEvent","coordinate","name","CameraScreen","justifyContent","alignItems","Tab","App","route","tabBarIcon","focused","color","size","iconName","activeTintColor","inactiveTintColor","styles","navLink","StyleSheet","create","container","paddingHorizontal","button","backgroundColor","countContainer","countText"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Text, View, StyleSheet, Alert } from \"react-native\";\r\nimport { SearchBar, Button, Image } from \"react-native-elements\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\r\nimport { useEffect } from \"react\";\r\nimport MapView, { Marker } from \"react-native-maps\";\r\n\r\n// server ip address\r\nconst ip = \"http://192.168.64.102:3000/\";\r\n//const ip = \"http://10.240.47.35:3000/\";\r\n\r\n// home screen\r\nfunction HomeScreen({ navigation }) {\r\n  // // define hooks\r\n  // const [name, setName] = useState(\"None\");\r\n  // const [country, setCountry] = useState(\"ERR\");\r\n  // const [temp, setTemp] = useState(\"0\");\r\n  // const [humidity, setHumidity] = useState(\"0\");\r\n  // const [pressure, setPressure] = useState(\"0\");\r\n  // const [wind, setWind] = useState(\"0\");\r\n  // const [description, setDescription] = useState(\"none\");\r\n  // const [icon, setIcon] = useState(\"01n\");\r\n  // useEffect(() => {\r\n  //   // on home screen focus fetch data from api\r\n  //   const unsubscribe = navigation.addListener(\"focus\", () => {\r\n  //     fetch(ip)\r\n  //       .then((response) => response.json())\r\n  //       .then((json) => {\r\n  //         // set variables to response data\r\n  //         setName(json.name);\r\n  //         setCountry(json.country);\r\n  //         setTemp(json.temp);\r\n  //         setPressure(json.pressure);\r\n  //         setWind(json.wind);\r\n  //         setHumidity(json.humidity);\r\n  //         setDescription(\r\n  //           json.description\r\n  //             .split(\" \")\r\n  //             .map((x) => x[0].toUpperCase() + x.slice(1))\r\n  //             .join(\" \")\r\n  //         );\r\n  //         setIcon(json.icon);\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.error(error);\r\n  //       });\r\n  //   });\r\n  //   return unsubscribe;\r\n  // }, [navigation]);\r\n  // return (\r\n  //   <View\r\n  //     style={{\r\n  //       flex: 1,\r\n  //       marginTop: 30,\r\n  //       padding: 10,\r\n  //     }}\r\n  //   >\r\n  //     <View\r\n  //       style={{\r\n  //         backgroundColor: \"#fff\",\r\n  //         flex: 2,\r\n  //         paddingVertical: 30,\r\n  //         paddingHorizontal: 5,\r\n  //       }}\r\n  //     >\r\n  //       <Text\r\n  //         style={{\r\n  //           fontSize: 32,\r\n  //           fontFamily: \"sans-serif-light\",\r\n  //           textAlign: \"center\",\r\n  //           marginBottom: 20,\r\n  //         }}\r\n  //       >\r\n  //         {name}, {country}\r\n  //       </Text>\r\n  //       <View\r\n  //         style={{\r\n  //           flex: 1,\r\n  //           flexDirection: \"row\",\r\n  //         }}\r\n  //       >\r\n  //         <View\r\n  //           style={{\r\n  //             flex: 1,\r\n  //             justifyContent: \"center\",\r\n  //             alignItems: \"center\",\r\n  //           }}\r\n  //         >\r\n  //           <Image\r\n  //             source={{\r\n  //               uri: \"http://openweathermap.org/img/wn/\" + icon + \"@2x.png\",\r\n  //             }}\r\n  //             style={{ width: 100, height: 100 }}\r\n  //           />\r\n  //           <Text style={{ fontSize: 16, color: \"#555\" }}>{description}</Text>\r\n  //         </View>\r\n  //         <View\r\n  //           style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\r\n  //         >\r\n  //           <Text style={{ fontSize: 64 }}>{temp}°</Text>\r\n  //         </View>\r\n  //       </View>\r\n  //     </View>\r\n  //     <View\r\n  //       style={{\r\n  //         flex: 1,\r\n  //         backgroundColor: \"#fff\",\r\n  //         marginTop: 10,\r\n  //         flexDirection: \"row\",\r\n  //       }}\r\n  //     >\r\n  //       <View\r\n  //         style={{\r\n  //           flex: 1,\r\n  //           justifyContent: \"center\",\r\n  //           alignItems: \"center\",\r\n  //         }}\r\n  //       >\r\n  //         <Text style={{ color: \"#999\", marginBottom: 10 }}>Wind</Text>\r\n  //         <Text>{wind} km/h</Text>\r\n  //       </View>\r\n  //       <View\r\n  //         style={{\r\n  //           flex: 1,\r\n  //           justifyContent: \"center\",\r\n  //           alignItems: \"center\",\r\n  //           borderLeftWidth: 5,\r\n  //           borderLeftColor: \"#eee\",\r\n  //           borderRightWidth: 5,\r\n  //           borderRightColor: \"#eee\",\r\n  //         }}\r\n  //       >\r\n  //         <Text style={{ color: \"#999\", marginBottom: 10 }}>Humidity</Text>\r\n  //         <Text>{humidity} %</Text>\r\n  //       </View>\r\n  //       <View\r\n  //         style={{\r\n  //           flex: 1,\r\n  //           justifyContent: \"center\",\r\n  //           alignItems: \"center\",\r\n  //         }}\r\n  //       >\r\n  //         <Text style={{ color: \"#999\", marginBottom: 10 }}>Pressure</Text>\r\n  //         <Text>{pressure} bar</Text>\r\n  //       </View>\r\n  //     </View>\r\n  //     <View\r\n  //       style={{ flex: 2, backgroundColor: \"royalblue\", marginTop: 10 }}\r\n  //     ></View>\r\n  //   </View>\r\n  // );\r\n  return null;\r\n}\r\n\r\n// map screen\r\nfunction MapScreen({ navigation }) {\r\n  // declare map variables\r\n  const [search, changeSearch] = useState(\"\");\r\n  const [lat, changeLat] = useState(46.54489);\r\n  const [lon, changeLon] = useState(14.95645);\r\n  let cityName;\r\n\r\n  useEffect(() => {\r\n    // on home screen focus fetch data from api\r\n    const unsubscribe = navigation.addListener(\"focus\", () => {\r\n      fetch(ip)\r\n        .then((response) => response.json())\r\n        .then((json) => {\r\n          // set variables to response data\r\n          changeLat(json.coord.lat);\r\n          changeLon(json.coord.lon);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    });\r\n    return unsubscribe;\r\n  }, [navigation]);\r\n\r\n  return (\r\n    <View style={{ flex: 1, marginTop: 30, padding: 10 }}>\r\n      <SearchBar\r\n        placeholder=\"City..\"\r\n        platform=\"android\"\r\n        onChangeText={changeSearch}\r\n        value={search}\r\n        containerStyle={{ paddingBottom: 0, paddingTop: 0 }}\r\n      />\r\n      <Button\r\n        title=\"Apply\"\r\n        onPress={() => {\r\n          if (search != \"\") {\r\n            cityName = search;\r\n            fetch(ip + \"city/\" + cityName)\r\n              .then((response) => response.json())\r\n              .then((json) => {\r\n                Alert.alert(\r\n                  \"Change city\",\r\n                  'You changed city to \"' + cityName + '\" ?',\r\n                  [\r\n                    {\r\n                      text: \"OK\",\r\n                      onPress: () => {\r\n                        if (json.cod == 200) {\r\n                          changeLat(json.coord.lat);\r\n                          changeLon(json.coord.lon);\r\n                          navigation.navigate(\"Home\");\r\n                        } else {\r\n                          Alert.alert(\r\n                            \"Invalid name\",\r\n                            \"You inserted invalid name\",\r\n                            [\r\n                              {\r\n                                text: \"OK\",\r\n                              },\r\n                            ],\r\n                            { cancelable: false }\r\n                          );\r\n                        }\r\n                      },\r\n                    },\r\n                  ],\r\n                  { cancelable: false }\r\n                );\r\n              });\r\n          }\r\n        }}\r\n      />\r\n      <MapView\r\n        style={{ position: \"relative\", flex: 1, marginTop: 10 }}\r\n        initialRegion={{\r\n          latitude: lat,\r\n          longitude: lon,\r\n          latitudeDelta: 20,\r\n          longitudeDelta: 20,\r\n        }}\r\n        onPress={(e) => {\r\n          changeLat(e.nativeEvent.coordinate.latitude);\r\n          changeLon(e.nativeEvent.coordinate.longitude);\r\n          fetch(\r\n            ip +\r\n              \"coord/lat=\" +\r\n              e.nativeEvent.coordinate.latitude +\r\n              \"&lon=\" +\r\n              e.nativeEvent.coordinate.longitude\r\n          )\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n              Alert.alert(\r\n                \"Change city\",\r\n                'You changed city to \"' + json.name + '\" ?',\r\n                [\r\n                  {\r\n                    text: \"OK\",\r\n                    onPress: () => {\r\n                      if (json.cod == 200) {\r\n                        navigation.navigate(\"Home\");\r\n                      }\r\n                    },\r\n                  },\r\n                ],\r\n                { cancelable: false }\r\n              );\r\n            });\r\n        }}\r\n      >\r\n        <Marker coordinate={{ latitude: lat, longitude: lon }} />\r\n      </MapView>\r\n    </View>\r\n  );\r\n}\r\n\r\n// camera screen\r\nfunction CameraScreen() {\r\n  return (\r\n    <View\r\n      style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\r\n    ></View>\r\n  );\r\n}\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n\r\n            if (route.name === \"Home\") {\r\n              iconName = focused ? \"ios-home\" : \"ios-home-outline\";\r\n            } else if (route.name === \"Map\") {\r\n              iconName = focused ? \"ios-locate\" : \"ios-locate-outline\";\r\n            } else if (route.name === \"Camera\") {\r\n              iconName = focused ? \"ios-camera\" : \"ios-camera-outline\";\r\n            }\r\n\r\n            // You can return any component that you like here!\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n        })}\r\n        tabBarOptions={{\r\n          activeTintColor: \"royalblue\",\r\n          inactiveTintColor: \"gray\",\r\n        }}\r\n      >\r\n        <Tab.Screen name=\"Home\" component={HomeScreen} style={styles.navLink} />\r\n        <Tab.Screen name=\"Map\" component={MapScreen} />\r\n        <Tab.Screen name=\"Camera\" component={CameraScreen} />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    paddingHorizontal: 10,\r\n  },\r\n  button: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#DDDDDD\",\r\n    padding: 10,\r\n  },\r\n  countContainer: {\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n  },\r\n  countText: {\r\n    color: \"#FF00FF\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}